"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3720],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,k=c["".concat(o,".").concat(m)]||c[m]||d[m]||s;return t?a.createElement(k,i(i({ref:n},p),{},{components:t})):a.createElement(k,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=c;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6648:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),i=["components"],l={},o=void 0,u={unversionedId:"laravel/mocking",id:"laravel/mocking",title:"mocking",description:"\u4ecb\u7ecd",source:"@site/docs/laravel/mocking.md",sourceDirName:"laravel",slug:"/laravel/mocking",permalink:"/docs/laravel/mocking",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"mix",permalink:"/docs/laravel/mix"},next:{title:"packages",permalink:"/docs/laravel/packages"}},p={},d=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"\u4efb\u52a1\u6a21\u62df",id:"\u4efb\u52a1\u6a21\u62df",level:2},{value:"\u4e8b\u4ef6\u6a21\u62df",id:"\u4e8b\u4ef6\u6a21\u62df",level:2},{value:"\u90ae\u4ef6\u6a21\u62df",id:"\u90ae\u4ef6\u6a21\u62df",level:2},{value:"\u901a\u77e5\u6a21\u62df",id:"\u901a\u77e5\u6a21\u62df",level:2},{value:"\u961f\u5217\u6a21\u62df",id:"\u961f\u5217\u6a21\u62df",level:2},{value:"Storage \u6a21\u62df",id:"storage-\u6a21\u62df",level:2},{value:"Facades \u6a21\u62df",id:"facades-\u6a21\u62df",level:2}],c={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"laravel-\u6d4b\u8bd5\u4e4b\u6d4b\u8bd5\u6a21\u62df\u5668"},"Laravel \u6d4b\u8bd5\u4e4b\uff1a\u6d4b\u8bd5\u6a21\u62df\u5668"),(0,s.kt)("h2",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,s.kt)("p",null,"\u6d4b\u8bd5 Laravel \u5e94\u7528\u65f6\uff0c\u6709\u65f6\u5019\u4f60\u53ef\u80fd\u60f3\u8981\u300c\u6a21\u62df\u300d\u5b9e\u73b0\u5e94\u7528\u7684\u90e8\u5206\u529f\u80fd\u7684\u884c\u4e3a\uff0c\u4ece\u800c\u907f\u514d\u8be5\u90e8\u5206\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u771f\u6b63\u6267\u884c\u3002\u4f8b\u5982\uff0c\u63a7\u5236\u5668\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff08 Events \uff09\uff0c\u4f60\u60f3\u8981\u6a21\u62df\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\uff0c\u4ece\u800c\u907f\u514d\u8be5\u4e8b\u4ef6\u5728\u6d4b\u8bd5\u8fd9\u4e2a\u63a7\u5236\u5668\u65f6\u771f\u6b63\u6267\u884c\u3002\u5982\u4e0a\u53ef\u4ee5\u8ba9\u4f60\u4ec5\u6d4b\u8bd5\u63a7\u5236\u5668\u7684 HTTP \u54cd\u5e94\u60c5\u51b5\uff0c\u800c\u4e0d\u7528\u53bb\u62c5\u5fc3\u89e6\u53d1\u4e8b\u4ef6\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u5728\u5355\u72ec\u7684\u6d4b\u8bd5\u4e2d\u6d4b\u8bd5\u8be5\u4e8b\u4ef6\u7684\u903b\u8f91\u3002"),(0,s.kt)("p",null,"Laravel \u9488\u5bf9\u4e8b\u4ef6\u3001\u4efb\u52a1\u548c facades \u7684\u6a21\u62df\u63d0\u4f9b\u4e86\u5f00\u7bb1\u5373\u7528\u7684\u8f85\u52a9\u51fd\u6570\u3002\u8fd9\u4e9b\u8f85\u52a9\u51fd\u6570\u57fa\u4e8e Mockery \u5c01\u88c5\u800c\u6210\uff0c\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u65e0\u9700\u4f60\u624b\u52a8\u8c03\u7528\u590d\u6742\u7684 Mockery \u51fd\u6570\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("a",{parentName:"p",href:"http://docs.mockery.io/en/latest/"},"Mockery")," \u6216\u8005 PHPUnit \u521b\u5efa\u81ea\u5df1\u7684\u6a21\u62df\u5668\u3002"),(0,s.kt)("h2",{id:"\u4efb\u52a1\u6a21\u62df"},"\u4efb\u52a1\u6a21\u62df"),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Bus")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"fake")," \u65b9\u6cd5\u6765\u6a21\u62df\u4efb\u52a1\u6267\u884c\uff0c\u6d4b\u8bd5\u7684\u65f6\u5019\u4efb\u52a1\u4e0d\u4f1a\u88ab\u771f\u5b9e\u6267\u884c\u3002\u4f7f\u7528 fakes \u7684\u65f6\u5019\uff0c\u65ad\u8a00\u4e00\u822c\u51fa\u73b0\u5728\u6d4b\u8bd5\u4ee3\u7801\u7684\u540e\u9762\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Jobs\\ShipOrder;\nuse Illuminate\\Support\\Facades\\Bus;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass ExampleTest extends TestCase\n{\n    public function testOrderShipping()\n    {\n        Bus::fake();\n\n        // \u5904\u7406\u8ba2\u5355\u53d1\u8d27...\n\n        Bus::assertDispatched(ShipOrder::class, function ($job) use ($order) {\n            return $job->order->id === $order->id;\n        });\n\n        // \u65ad\u8a00\u4efb\u52a1\u5e76\u6ca1\u6709\u88ab\u6267\u884c...\n        Bus::assertNotDispatched(AnotherJob::class);\n    }\n}\n")),(0,s.kt)("h2",{id:"\u4e8b\u4ef6\u6a21\u62df"},"\u4e8b\u4ef6\u6a21\u62df"),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Event")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"fake")," \u65b9\u6cd5\u6765\u6a21\u62df\u4e8b\u4ef6\u76d1\u542c\uff0c\u6d4b\u8bd5\u7684\u65f6\u5019\u4e0d\u4f1a\u89e6\u53d1\u4e8b\u4ef6\u76d1\u542c\u5668\u8fd0\u884c\u3002\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u65ad\u8a00\u4e8b\u4ef6\u8fd0\u884c\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u68c0\u67e5\u5b83\u4eec\u6536\u5230\u7684\u6570\u636e\u3002\u4f7f\u7528 fakes \u7684\u65f6\u5019\uff0c\u65ad\u8a00\u4e00\u822c\u51fa\u73b0\u5728\u6d4b\u8bd5\u4ee3\u7801\u7684\u540e\u9762:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Events\\OrderShipped;\nuse App\\Events\\OrderFailedToShip;\nuse Illuminate\\Support\\Facades\\Event;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass ExampleTest extends TestCase\n{\n    /**\n     * \u6d4b\u8bd5\u8ba2\u5355\u53d1\u8d27.\n     */\n    public function testOrderShipping()\n    {\n        Event::fake();\n\n        // \u5904\u7406\u8ba2\u5355\u53d1\u8d27...\n\n        Event::assertDispatched(OrderShipped::class, function ($e) use ($order) {\n            return $e->order->id === $order->id;\n        });\n\n        Event::assertNotDispatched(OrderFailedToShip::class);\n    }\n}\n")),(0,s.kt)("h2",{id:"\u90ae\u4ef6\u6a21\u62df"},"\u90ae\u4ef6\u6a21\u62df"),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Mail")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"fake")," \u65b9\u6cd5\u6765\u6a21\u62df\u90ae\u4ef6\u53d1\u9001\uff0c\u6d4b\u8bd5\u65f6\u4e0d\u4f1a\u771f\u7684\u53d1\u9001\u90ae\u4ef6\u3002\u7136\u540e\u4f60\u53ef\u4ee5\u65ad\u8a00 ",(0,s.kt)("a",{parentName:"p",href:"/docs/laravel/mail"},"mailables")," \u53d1\u9001\u7ed9\u4e86\u7528\u6237\uff0c\u751a\u81f3\u53ef\u4ee5\u68c0\u67e5\u4ed6\u4eec\u6536\u5230\u7684\u6570\u636e. \u4f7f\u7528 fakes \u65f6\uff0c\u65ad\u8a00\u4e00\u822c\u5728\u6d4b\u8bd5\u4ee3\u7801\u7684\u540e\u9762\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Mail\\OrderShipped;\nuse Illuminate\\Support\\Facades\\Mail;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass ExampleTest extends TestCase\n{\n    public function testOrderShipping()\n    {\n        Mail::fake();\n\n        // \u5904\u7406\u8ba2\u5355\u53d1\u8d27...\n\n        Mail::assertSent(OrderShipped::class, function ($mail) use ($order) {\n            return $mail->order->id === $order->id;\n        });\n\n        // \u65ad\u8a00\u4e00\u5c01\u90ae\u4ef6\u5df2\u7ecf\u53d1\u9001\u7ed9\u4e86\u6307\u5b9a\u7528\u6237...\n        Mail::assertSent(OrderShipped::class, function ($mail) use ($user) {\n            return $mail->hasTo($user->email) &&\n                   $mail->hasCc('...') &&\n                   $mail->hasBcc('...');\n        });\n            \n        // \u65ad\u8a00 mailable \u53d1\u9001\u4e862\u6b21...\n        Mail::assertSent(OrderShipped::class, 2);\n\n        // \u65ad\u8a00 mailable \u6ca1\u6709\u53d1\u9001...\n        Mail::assertNotSent(AnotherMailable::class);\n    }\n}\n")),(0,s.kt)("p",null,"\u5982\u679c\u4f60\u662f\u7528\u540e\u53f0\u4efb\u52a1\u961f\u6267\u884c mailables \u7684\u53d1\u9001\uff0c\u4f60\u5e94\u8be5\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"assertQueued")," \u65b9\u6cd5\u6765\u4ee3\u66ff ",(0,s.kt)("inlineCode",{parentName:"p"},"assertSent"),"\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Mail::assertQueued(...);\nMail::assertNotQueued(...);\n")),(0,s.kt)("h2",{id:"\u901a\u77e5\u6a21\u62df"},"\u901a\u77e5\u6a21\u62df"),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Notification")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"fake")," \u65b9\u6cd5\u6765\u6a21\u62df\u901a\u77e5\u53d1\u9001\uff0c\u6d4b\u8bd5\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u771f\u7684\u53d1\u9001\u901a\u77e5\u3002\u7136\u540e\u4f60\u53ef\u4ee5\u65ad\u8a00 \u901a\u77e5 \u5df2\u7ecf\u53d1\u9001\u7ed9\u4f60\u7684\u7528\u6237\uff0c\u751a\u81f3\u53ef\u4ee5\u68c0\u67e5\u4ed6\u4eec\u6536\u5230\u7684\u6570\u636e\u3002\u4f7f\u7528 fakes \u65f6, \u65ad\u8a00\u4e00\u822c\u51fa\u73b0\u5728\u6d4b\u8bd5\u4ee3\u7801\u7684\u540e\u9762."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Notifications\\OrderShipped;\nuse Illuminate\\Support\\Facades\\Notification;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass ExampleTest extends TestCase\n{\n    public function testOrderShipping()\n    {\n        Notification::fake();\n\n        // \u5904\u7406\u8ba2\u5355\u53d1\u8d27...\n\n        Notification::assertSentTo(\n            $user,\n            OrderShipped::class,\n            function ($notification, $channels) use ($order) {\n                return $notification->order->id === $order->id;\n            }\n        );\n\n        // \u65ad\u8a00\u901a\u77e5\u5df2\u7ecf\u53d1\u9001\u7ed9\u4e86\u6307\u5b9a\u7528\u6237...\n        Notification::assertSentTo(\n            [$user], OrderShipped::class\n        );\n\n        // \u65ad\u8a00\u901a\u77e5\u6ca1\u6709\u53d1\u9001...\n        Notification::assertNotSentTo(\n            [$user], AnotherNotification::class\n        );\n    }\n}\n")),(0,s.kt)("h2",{id:"\u961f\u5217\u6a21\u62df"},"\u961f\u5217\u6a21\u62df"),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Queue")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"fake")," \u65b9\u6cd5\u6765\u6a21\u62df\u4efb\u52a1\u961f\u5217\uff0c\u6d4b\u8bd5\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u771f\u7684\u628a\u4efb\u52a1\u653e\u5165\u961f\u5217\u3002\u7136\u540e\u4f60\u53ef\u4ee5\u65ad\u8a00\u4efb\u52a1\u88ab\u653e\u8fdb\u4e86\u961f\u5217\uff0c\u751a\u81f3\u53ef\u4ee5\u68c0\u67e5\u5b83\u4eec\u6536\u5230\u7684\u6570\u636e\u3002\u4f7f\u7528 fakes \u7684\u65f6\u5019\uff0c\u65ad\u8a00\u4e00\u822c\u51fa\u73b0\u5728\u6d4b\u8bd5\u4ee3\u7801\u7684\u540e\u9762\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Jobs\\ShipOrder;\nuse Illuminate\\Support\\Facades\\Queue;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass ExampleTest extends TestCase\n{\n    public function testOrderShipping()\n    {\n        Queue::fake();\n\n        // \u5904\u7406\u8ba2\u5355\u53d1\u8d27...\n\n        Queue::assertPushed(ShipOrder::class, function ($job) use ($order) {\n            return $job->order->id === $order->id;\n        });\n\n        // \u65ad\u8a00\u4efb\u52a1\u8fdb\u5165\u4e86\u6307\u5b9a\u961f\u5217...\n        Queue::assertPushedOn('queue-name', ShipOrder::class);\n            \n        // \u65ad\u8a00\u4efb\u52a1\u8fdb\u5165\u4e862\u6b21...\n        Queue::assertPushed(ShipOrder::class, 2);\n        \n        // \u65ad\u8a00\u4efb\u52a1\u6ca1\u6709\u8fdb\u5165\u961f\u5217...\n        Queue::assertNotPushed(AnotherJob::class);\n    }\n}\n")),(0,s.kt)("h2",{id:"storage-\u6a21\u62df"},"Storage \u6a21\u62df"),(0,s.kt)("p",null,"\u5229\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Storage")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"fake")," \u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u751f\u6210\u4e00\u4e2a\u6a21\u62df\u7684\u78c1\u76d8\uff0c\u7ed3\u5408 ",(0,s.kt)("inlineCode",{parentName:"p"},"UploadedFile")," \u7c7b\u7684\u6587\u4ef6\u751f\u6210\u5de5\u5177\uff0c\u6781\u5927\u5730\u7b80\u5316\u4e86\u6587\u4ef6\u4e0a\u4f20\u6d4b\u8bd5\u3002\u4f8b\u5982\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse Illuminate\\Http\\UploadedFile;\nuse Illuminate\\Support\\Facades\\Storage;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass ExampleTest extends TestCase\n{\n    public function testAvatarUpload()\n    {\n        Storage::fake('avatars');\n\n        $response = $this->json('POST', '/avatar', [\n            'avatar' => UploadedFile::fake()->image('avatar.jpg')\n        ]);\n\n        // \u65ad\u8a00\u6587\u4ef6\u5df2\u5b58\u50a8\n        Storage::disk('avatars')->assertExists('avatar.jpg');\n\n        // \u65ad\u8a00\u6587\u4ef6\u4e0d\u5b58\u5728\n        Storage::disk('avatars')->assertMissing('missing.jpg');\n    }\n}\n")),(0,s.kt)("h2",{id:"facades-\u6a21\u62df"},"Facades \u6a21\u62df"),(0,s.kt)("p",null,"\u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u9759\u6001\u51fd\u6570\u7684\u8c03\u7528\uff0c ",(0,s.kt)("a",{parentName:"p",href:"/docs/laravel/facades"},"facades")," \u4e5f\u662f\u53ef\u4ee5\u88ab\u6a21\u62df\u7684\uff0c\u76f8\u5bf9\u9759\u6001\u51fd\u6570\u6765\u8bf4\u8fd9\u662f\u4e2a\u5de8\u5927\u7684\u4f18\u52bf\uff0c\u5373\u4f7f\u4f60\u5728\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\uff0c\u6d4b\u8bd5\u65f6\u4f9d\u7136\u4f1a\u975e\u5e38\u65b9\u4fbf\u3002\u5728\u5f88\u591a\u6d4b\u8bd5\u4e2d\uff0c\u4f60\u53ef\u80fd\u7ecf\u5e38\u60f3\u5728\u63a7\u5236\u5668\u4e2d\u6a21\u62df\u5bf9 Laravel facade \u7684\u8c03\u7528\u3002\u6bd4\u5982\u4e0b\u9762\u63a7\u5236\u5668\u4e2d\u7684\u884c\u4e3a\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Support\\Facades\\Cache;\n\nclass UserController extends Controller\n{\n    /**\n     * \u663e\u793a\u7f51\u7ad9\u7684\u6240\u6709\u7528\u6237\n     *\n     * @return Response\n     */\n    public function index()\n    {\n        $value = Cache::get('key');\n\n        //\n    }\n}\n")),(0,s.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ",(0,s.kt)("inlineCode",{parentName:"p"},"shouldReceive")," \u65b9\u6cd5\u6765\u6a21\u62df ",(0,s.kt)("inlineCode",{parentName:"p"},"Cache")," facade \uff0c\u6b64\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/padraic/mockery"},"Mockery")," \u5b9e\u4f8b\uff0c\u7531\u4e8e\u5bf9 facade \u7684\u8c03\u7528\u5b9e\u9645\u4e0a\u90fd\u662f\u7531 Laravel \u7684 ",(0,s.kt)("a",{parentName:"p",href:"/docs/laravel/container"},"\u670d\u52a1\u5bb9\u5668")," \u7ba1\u7406\u7684\uff0c\u6240\u4ee5 facade \u80fd\u6bd4\u4f20\u7edf\u7684\u9759\u6001\u7c7b\u8868\u73b0\u51fa\u66f4\u597d\u7684\u6d4b\u8bd5\u4fbf\u5229\u6027\u3002\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b ",(0,s.kt)("inlineCode",{parentName:"p"},"Cache")," facade \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"get")," \u65b9\u6cd5\u7684\u8c03\u7528\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse Illuminate\\Support\\Facades\\Cache;\nuse Illuminate\\Foundation\\Testing\\WithoutMiddleware;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Illuminate\\Foundation\\Testing\\DatabaseTransactions;\n\nclass UserControllerTest extends TestCase\n{\n    public function testGetIndex()\n    {\n        Cache::shouldReceive('get')\n                    ->once()\n                    ->with('key')\n                    ->andReturn('value');\n\n        $response = $this->get('/users');\n\n        // ...\n    }\n}\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"{note} \u4e0d\u53ef\u4ee5\u6a21\u62df ",(0,s.kt)("inlineCode",{parentName:"p"},"Request")," facade\uff0c\u6d4b\u8bd5\u65f6\uff0c\u5982\u679c\u9700\u8981\u4f20\u9012\u6307\u5b9a\u7684\u6570\u636e\u8bf7\u4f7f\u7528 HTTP \u8f85\u52a9\u51fd\u6570\uff0c\u4f8b\u5982 ",(0,s.kt)("inlineCode",{parentName:"p"},"get")," \u548c ",(0,s.kt)("inlineCode",{parentName:"p"},"post"),"\u3002\u7c7b\u4f3c\u7684\uff0c\u8bf7\u5728\u4f60\u7684\u6d4b\u8bd5\u4e2d\u901a\u8fc7\u8c03\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Config::set")," \u6765\u6a21\u62df ",(0,s.kt)("inlineCode",{parentName:"p"},"Config")," facade\u3002")),(0,s.kt)("hr",null),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"{note} \u6b22\u8fce\u4efb\u4f55\u5f62\u5f0f\u7684\u8f6c\u8f7d\uff0c\u4f46\u8bf7\u52a1\u5fc5\u6ce8\u660e\u51fa\u5904\uff0c\u5c0a\u91cd\u4ed6\u4eba\u52b3\u52a8\u5171\u521b\u5f00\u6e90\u793e\u533a\u3002"),(0,s.kt)("p",{parentName:"blockquote"},"\u8f6c\u8f7d\u8bf7\u6ce8\u660e\uff1a\u672c\u6587\u6863\u7531 Laravel China \u793e\u533a ",(0,s.kt)("a",{parentName:"p",href:"https://laravel-china.org"},"laravel-china.org")," \u7ec4\u7ec7\u7ffb\u8bd1\uff0c\u8be6\u89c1 ",(0,s.kt)("a",{parentName:"p",href:"https://laravel-china.org/topics/5756/laravel-55-document-translation-call-come-and-join-the-translation"},"\u7ffb\u8bd1\u53ec\u96c6\u5e16"),"\u3002"),(0,s.kt)("p",{parentName:"blockquote"},"\u6587\u6863\u6c38\u4e45\u5730\u5740\uff1a ",(0,s.kt)("a",{parentName:"p",href:"https://d.laravel-china.org"},"https://d.laravel-china.org"))))}m.isMDXComponent=!0}}]);